from plone.app.registry.browser.controlpanel import ControlPanelFormWrapper, RegistryEditForm
from plone.autoform.directives import widget
from plone.formwidget.namedfile.widget import NamedFileFieldWidget, NamedImageFieldWidget
from plone.supermodel import model
from plone.z3cform import layout
from uwosh.oie.studyabroadstudent import _
from uwosh.oie.studyabroadstudent.constants import DEFAULT_ELIGIBILITY_REQUIREMENTS
from zope import schema
from zope.interface import Interface
from uwosh.oie.studyabroadstudent.constants import DEFAULT_TUITION_AND_FEES

class IOIEStudyAbroadStudentControlPanel(Interface):

    model.fieldset(
        'Academic',
        fields=['majors', 'programs', 'subjects', 'credits',
                'course_subject', 'enrollment_institution',
                'program_of_study', 'student_status',
                'education_level', 'requirements_met',
                'course_subject_and_number', 'college_or_unit',
                'sponsoring_unit_or_department', 'term', 'university',
                'title', 'building'],
    )
    model.fieldset(
        'Demographic',
        fields=['ethnicities', 'marriage_statuses', 'genders',
                'immigration_status'],
    )
    model.fieldset(
        'Geography',
        fields=['countries', 'states_for_residency',
                'us_states_territories', 'citizenship', 'language'],
    )
    model.fieldset(
        'Housing',
        fields=['room_size', 'accommodation'],
    )
    model.fieldset(
        'Travel',
        fields=['airport', 'locations', 'airport_transfer', 'transition_type'],
    )
    model.fieldset(
        'Travel Documents',
        fields=['travel_document', 'visa_delivery_options'],
    )
    model.fieldset(
        'Programs',
        fields=['eligibility_requirement', 'guest_lectures',
                'equipment_and_space', 'class_standing',
                'approving_as', 'leadership_role', 'program_cycle',
                'course_enrollment_at', 'cooperating_partners',
                'flyer', 'tuition_and_fees', 'provider_type',
                'program_component', 'program_type'],
    )
    model.fieldset(
        'Compensation',
        fields=['percentage_or_lump_sum',
                'compensation_payment_or_replacement',
                'compensation_type', 'salary_form_type',
                'salary_terms', 'payment_forms'],
    )
    model.fieldset(
        'OIE',
        fields=['oie_staff', 'session_hours', 'program_view_footer',
                'uwo_logo'],
    )
    model.fieldset(
        'Forms',
        fields=['state_of_wisconsin_need_based_travel_grant_form',
                'special_student_form_for_undergraduate_admissions',
                'disciplinary_clearance_form'],
    )

    majors = schema.Tuple(
        title=_('Majors'),
        default=(
            '-- choose one --',
            'Accounting',
            'African American Studies',
            'Anthropology',
            'Art',
            'Biology',
            'Broadfield Natural Science',
            'Broadfield Social Science',
            'business-undeclared-prebus',
            'Canada and U.S. Studies',
            'Chemistry',
            'Communication',
            'Computer Science',
            'Criminal Justice',
            'Dual Early Childhood PK-3 and Special Education Birth through Age 8',
            'Dual Elementary 1-6 and Special',
            'emba',
            'Earth Science',
            'Economics',
            'Education',
            'Elementary Education',
            'engineering-technology',
            'English',
            'English as a Second Language',
            'Environmental Studies',
            'Finance',
            'Fine Arts',
            'French',
            'Geography',
            'Geology',
            'German',
            'History',
            'Human Resources',
            'Human Services',
            'Individually Planned',
            'Interdisciplinary Studies',
            'International Studies',
            'japanese',
            'Journalism',
            'kinesiology',
            'Liberal Arts',
            'Liberal Studies',
            'MBA',
            'Management Information Systems (MIS)',
            'Marketing',
            'Mathematics',
            'Medical Technology',
            'Microbiology',
            'Military Science',
            'Music',
            'Music Education',
            'Music Therapy',
            'Nursing',
            'Operations Management',
            'Philosophy',
            'Physical Education',
            'Physics',
            'Political Science',
            'Pre-Professional Studies',
            'professional-counseling',
            'Psychology',
            'Public Affairs',
            'Radio TV Film (RTF)',
            'Religious Studies',
            'Secondary Education',
            'Social Work',
            'Sociology',
            'Spanish',
            'Special Education Cross-Categorical',
            'THEATRE ARTS',
            'Urban and Regional Studies',
            'Womens Studies',
            'pre-engineering',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    programs = schema.Tuple(
        title=_('Programs'),
        default=(
            '20th Century British Philosophy in Cambridge, UK',
            '20th Century Eastern Europe and the Holocaust',
            '3D Design, Art and Technology in Korea',
            'Activism, Resistance, and Visual Rhetoric in Germany',
            'American University of Rome, Italy (UW-Platteville)',
            'American Writers in Paris',
            'Animal Behavior Observation in Tanzania',
            'Applied Parasitology in Nicaragua and Costa Rica',
            'Applied Pharmacology',
            'Approaches to Resource Management of Tropical Ecosystems in Belize',
            'Asia-Pacific TEFL Workshop',
            'AustraLearn - academic year',
            'AustraLearn - semester',
            'AustraLearn - short-term',
            'Black Howler Monkey Research in Belize',
            'British Politics and Political Thought',
            'Business & Economics in China',
            'Business & Economics in Peru',
            'Business in Fulda, Germany',
            'Business in India: Opportunities & Challenges (business participant)',
            'Business in India: Opportunities & Challenges (student participants)',
            'Camp Kyushu',
            'Challenge Australia: Leadership Development',
            'Challenge New Zealand: Leadership Development',
            'Communication, Social Justice, Women and Gender Studies in Tanzania',
            'Comparative Criminal Justice Systems in Great Britain & France',
            'Coral Reefs and Geology of Bermuda',
            'Counseling, Culture and Spirituality in India',
            'Cross-Cultural Psychology Research in Brazil',
            'Culture & Community Change in Costa Rica',
            'Culture and Communication in Italy and Greece',
            'Culture and Style in England and Italy',
            'Czech Culture & Society in a Global Context',
            'EMBA Abroad',
            'Economics of the Carribean through Service Learning in Jamaica',
            'Educators Abroad Student Teaching',
            'Estonia, Russia and Eastern Europe in the 20th Century',
            'Estudio de Lectoescritura en Costa Rica',
            "Ethics & Community in Martha's Vineyard, MA (USA)",
            'European Business Travel Seminar',
            'European Odyssey',
            'Experience Scotland',
            'Field Geology in China',
            'Harbin Institute of Technology-Summer Program',
            'Hessen - Frankfurt University of Applied Sciences - academic year',
            'Hessen - Frankfurt University of Applied Sciences - semester',
            'Hessen - Hochschule Darmstadt - academic year',
            'Hessen - Hochschule Darmstadt - semester',
            'Hessen - Hochschule Fulda - academic year',
            'Hessen - Hochschule Fulda - semester',
            'Hessen - Hochschule RheinMain - academic year',
            'Hessen - Hochschule RheinMain - semester',
            'Hessen - Hochschule für Gestaltung Offenbach am Main - academic year',
            'Hessen - Hochschule für Gestaltung Offenbach am Main - semester',
            'Hessen - Hochschule für Musik und Darstellende Kunst Frankfurt - academic year',
            'Hessen - Hochschule für Musik und Darstellende Kunst Frankfurt - semester',
            'Hessen - Johann Wolfgang Goethe-Universität Frankfurt - academic year',
            'Hessen - Johann Wolfgang Goethe-Universität Frankfurt - semester',
            'Hessen - Justus-Liebig-Universität Gießen - academic year',
            'Hessen - Justus-Liebig-Universität Gießen - semester',
            'Hessen - Philipps-Universität Marburg - IUSP',
            'Hessen - Philipps-Universität Marburg - academic year',
            'Hessen - Philipps-Universität Marburg - semester',
            'Hessen - Technische Hochschule Mittelhessen - academic year',
            'Hessen - Technische Hochschule Mittelhessen - semester',
            'Hessen - Technische Universität Darmstadt - academic year',
            'Hessen - Technische Universität Darmstadt - semester',
            'Hessen - Universität Kassel - academic year',
            'Hessen - Universität Kassel - semester',
            'Hessen, Germany Student Exchange - academic year',
            'Hessen, Germany Student Exchange - semester',
            'History of British Philosophy in Cambridge, England',
            'History of Styles',
            'Hochschule Osnabrueck - academic year',
            'Hochschule Osnabrueck - semester',
            'Intensive Spanish in Salamanca, Spain - CAPP',
            'Intensive Spanish in Salamanca, Spain - academic year',
            'Intensive Spanish in Salamanca, Spain - semester',
            'Intensive Spanish in Salamanca, Spain - short-term',
            'International Operations Management in Ireland',
            'International Summer University in Darmstadt, Germany',
            'International Summer University in Frankfurt, Germany',
            'International Summer University in Fulda, Germany',
            'International Summer University in Giessen, Germany',
            'International Summer University in Kassel, Germany',
            'International Summer University in Marburg, Germany',
            'International Winter University in Fulda, Germany',
            'International Winter University in Kassel, Germany',
            'Junior II Medical/Surgical Clinical in India',
            'Kookmin Univeristy - Summer Language Program',
            'Kookmin University - academic year',
            'Kookmin University - semester',
            'Language and Culture for Teachers (Costa Rica)',
            'Languages Open Doors (Chile)',
            'Leadership & Culture in Australia and New Zealand',
            'Leadership & Culture in Australia',
            "Lorenzo de' Medici - Florence",
            "Lorenzo de' Medici - Rome",
            "Lorenzo de' Medici - Three Cities",
            "Lorenzo de' Medici - Tuscania",
            'Los Angeles Connection (USA)',
            'MBA Healthcare in India',
            'MBA in China & Korea',
            'Mathematics Education in China',
            'Mathematics Education in Germany',
            'Mathematics Education in Peru',
            'Modern Democratic Politics in Europe',
            'Modern European Politics and the Rise and Fall of European Facism',
            'Nagasaki Junior College - semester',
            'Nagasaki Junior College/USA Summer Camp Study & Internship Program',
            'Nagasaki University of Foreign Studies, Japan (UW-Platteville academic year)',
            'Nagasaki University of Foreign Studies, Japan (UW-Platteville semester)',
            'National Student Exchange - academic year',
            'National Student Exchange - semester',
            'Nationalism and Internationalism in the Heart of Europe',
            'Nicaragua: Gender, Poverty, and Activism',
            'Ningbo University - academic year',
            'Ningbo University - semester',
            'Nursing Clinical Community & Families in Peru (Batch 1)',
            'Nursing Clinical Community & Families in Peru (Batch 2)',
            'Nursing Clinical Community and Families in Nicaragua',
            'Nursing Clinical Rotations AND Nursing & Health Care in India (combined programs)',
            'Nursing Clinical Rotations in Uganda',
            'Nursing Community Health Clinical in India',
            'Peruvian Business Travel Seminar in Lima',
            'Politics and Political History in Great Britain',
            'Quest III Literary Landscapes: Ireland',
            'Quest III Migration, Culture, and Human Rights in the Americas in Nicaragua',
            'Quest III in Panama',
            'Quest III: Culture & Community Change in Costa Rica',
            'Reading and Writing in Place: Ireland',
            'Reason & Religion in 18th Century Scotland',
            'Religious Studies in India & Nepal',
            'Ritsumeikan Asia Pacific University Student Exchange - academic year',
            'Ritsumeikan Asia Pacific University Student Exchange - semester',
            'Seijo University Student Exchange (academic year)',
            'Seijo University Student Exchange (semester)',
            'Seminar on Globalization - Africas Experience in Kenya',
            'Service-Learning in Malaysia',
            'Social Work Study in Germany - Summer + Fall Semester',
            'Social Work Study in Germany - Summer',
            'Society and Culture in Greece & London',
            'South Central University for Nationalities, China (UW-Platteville)',
            'Spanish Language & Culture in Guanajuato, Mexico',
            'Spanish and Economics Studies in Peru',
            'Spanish-American Institute of International Education, Spain (UW-Platteville)',
            'Spring Interim in Rome',
            "St. Mary's University College, England (academic year; UW-Platteville)",
            "St. Mary's University College, England (semester; UW-Platteville)",
            'Student Consulting Practicum + European Business Travel Seminar',
            'Student Consulting Practicum + Peruvian Business Travel Seminar',
            'Student Consulting Practicum',
            'Study in Lille, France',
            'Study plus Intern or Teach in China',
            'Study plus Intern or Volunteer in Australia',
            'Summer Courses in Osnabrueck, Germany',
            'Summer in England and Scotland',
            'Survey of Special and Early Childhood Education in Belize',
            'Sustainability & Globalization - Africas Experience in Uganda',
            'THM Internship in Germany',
            'Teach in China',
            'Teacher Education in Korea',
            'The Intern Group',
            'The Jewish Question in European Politics in Poland and Germany',
            'Travel Writing in Nicaragua',
            'Travel and Documentary Photography in England',
            'Traveling Through Literary and Artistic England',
            'USA Summer Camp (Japan)',
            "Universidad Bernardo O'Higgins Student Exchange (academic year)",
            "Universidad Bernardo O'Higgins Student Exchange (semester)",
            'Universidad Castilla-La Mancha (academic year)',
            'Universidad del Pacifico Student Exchange - academic year',
            'Universidad del Pacifico Student Exchange - semester',
            'University Honors Program',
            'University of Nagasaki Siebold - academic year',
            'University of Nagasaki Siebold - semester',
            'University of New Brunswick Student Exchange - academic year',
            'University of New Brunswick Student Exchange - semester',
            'University of Newcastle, Australia (UW-Platteville)',
            'Viessmann Academy - Student Seminar in Sustainability in Germany',
            'Viessmann Internship Program in Allendorf (summer)',
            'Viessmann Internship Program in Schwandorf (summer)',
            'Writing Across Cultures in Nicaragua',
            'Youth Exchange Program in Japan',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    subjects = schema.Tuple(
        title=_('Subjects'),
        default=(
            '-- choose one --',
            'AF AM ST',
            'ANTHRO',
            'ARABIC',
            'ARAPAHO',
            'ART',
            'ASTRONY',
            'BIOLOGY',
            'BUSINESS',
            'CHEM',
            'COMM',
            'COMP SCI',
            'CRIM JUS',
            'DFLL',
            'ECON',
            'ED FOUND',
            'ED LDRSP',
            'ELEM ED',
            'eng-tech',
            'ENGLISH',
            'ENV STDS',
            'EXT STDS',
            'FL ELECT',
            'FR ABRD',
            'FRENCH',
            'GEN ELEC',
            'GEN STDS',
            'GEOG',
            'GEOLOGY',
            'GERMAN',
            'HEALTH',
            'HISTORY',
            'honors',
            'HU ELECT',
            'HUMAN SV',
            'INTRDSCP',
            'INTRNTL',
            'JAPANESE',
            'JOURNAL',
            'KINESIOL',
            'LIB SCI',
            'LIB STDS',
            'MATH',
            'MED TECH',
            'MIL SCI',
            'MPA',
            'MUSIC',
            'NS ELECT',
            'NURS-ACC',
            'NURS-CNP',
            'NURSING',
            'PBIS',
            'PHIL',
            'PHYS AST',
            'PHYS SCI',
            'POLI SCI',
            'PRAC ART',
            'PROF COUNSELING',
            'PRTGUESE',
            'PSYCH',
            'PUB ADM',
            'PhysicalEducation',
            'READING',
            'RELSTDS',
            'RUSSIAN',
            'radio-tv-film',
            'SEC ED',
            'SHOSHONE',
            'SOC WORK',
            'social-justice',
            'SOCIOLOGY',
            'SPANISH',
            'SPEC ED',
            'SRVC CRS',
            'SS ELECT',
            'TBIS',
            'THEATRE',
            'URB REG',
            'WOM STDS',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    ethnicities = schema.Tuple(
        title=_('Ethnicities'),
        default=(
            'no answer',
            'African-American',
            'Hispanic',
            'Native American',
            'Asian/Pacific Islander',
            'Other',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    marriage_statuses = schema.Tuple(
        title=_('Marriage Statuses'),
        default=('Married', 'Single'),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    genders = schema.Tuple(
        title=_('Genders'),
        default=('Male', 'Female', 'Other'),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    states_for_residency = schema.Tuple(
        title=_('States for Residency'),
        default=('Wisconsin', 'Minnesota', 'Other'),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    us_states_territories = schema.Tuple(
        title=_('U.S. States and Territories'),
        default=(
            'Wisconsin',
            'Alaska',
            'Alabama',
            'Arkansas',
            'American Samoa',
            'Arizona',
            'California',
            'Colorado',
            'Connecticut',
            'District of Columbia',
            'Delaware',
            'Florida',
            'Georgia',
            'Guam',
            'Hawaii',
            'Iowa',
            'Idaho',
            'Illinois',
            'Indiana',
            'Kansas',
            'Kentucky',
            'Louisiana',
            'Massachusetts',
            'Maryland',
            'Maine',
            'Michigan',
            'Minnesota',
            'Missouri',
            'Northern Mariana Islands',
            'Mississippi',
            'Montana',
            'National',
            'North Carolina',
            'North Dakota',
            'Nebraska',
            'New Hampshire',
            'New Jersey',
            'New Mexico',
            'Nevada',
            'New York',
            'Ohio',
            'Oklahoma',
            'Oregon',
            'Pennsylvania',
            'Puerto Rico',
            'Rhode Island',
            'South Carolina',
            'South Dakota',
            'Tennessee',
            'Texas',
            'Utah',
            'Virginia',
            'Virgin Islands',
            'Vermont',
            'Washington',
            'West Virginia',
            'Wyoming',
            'none',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    citizenship = schema.Tuple(
        title=_('Citizenship'),
        default=('U.S. Citizen', 'Permanent U.S. Resident', 'Other Citizenship'),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    session_hours = schema.Tuple(
        title=_('Session hours'),
        default=('09:00-11:00', '15:00-17:00'),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    countries = schema.Tuple(
        title=_('Countries'),
        default=(
            'United States',
            'Abkhazia',
            'Afghanistan',
            'Akrotiri and Dhekelia',
            'Åland',
            'Albania',
            'Algeria',
            'American Samoa',
            'Angola',
            'Andorra',
            'Anguilla',
            'Antigua and Barbuda',
            'Argentina',
            'Armenia',
            'Aruba',
            'Australia',
            'Austria',
            'Azerbaijan',
            'Bahamas',
            'Bahrain',
            'Bangladesh',
            'Barbados',
            'Belarus',
            'Belgium',
            'Belize',
            'Benin',
            'Bermuda',
            'Bhutan',
            'Bolivia',
            'Bosnia and Herzegovina',
            'Botswana',
            'Brazil',
            'British Virgin Islands',
            'Brunei',
            'Bulgaria',
            'Burkina Faso',
            'Burundi',
            'Cambodia',
            'Cameroon',
            'Canada',
            'Cape Verde',
            'Cayman Islands',
            'Central African Rep.',
            'Chad',
            'Channel Islands',
            'Chile',
            'China',
            'Christmas Island',
            'Cocos Island',
            'Colombia',
            'Comoros',
            'Congo, Dem. Rep.',
            'Congo, Rep.',
            'Cook Islands',
            'Costa Rica',
            "Cote d'Ivoire",
            'Croatia',
            'Cuba',
            'Cyprus',
            'Czech Rep.',
            'Czechoslovakia',
            'Denmark',
            'Djibouti',
            'Dominica',
            'Dominican Rep.',
            'East Germany',
            'Ecuador',
            'Egypt',
            'El Salvador',
            'Equatorial Guinea',
            'Eritrea',
            'Eritrea and Ethiopia',
            'Estonia',
            'Ethiopia',
            'Faeroe Islands',
            'Falkland Islands (Malvinas)',
            'Fiji',
            'Finland',
            'France',
            'French Guiana',
            'French Polynesia',
            'Gabon',
            'Gambia',
            'Georgia',
            'Germany',
            'Ghana',
            'Gibraltar',
            'Greece',
            'Greenland',
            'Grenada',
            'Guadeloupe',
            'Guam',
            'Guatemala',
            'Guernsey',
            'Guinea',
            'Guinea-Bissau',
            'Guyana',
            'Haiti',
            'Holy See',
            'Honduras',
            'Hong Kong, China',
            'Hungary',
            'Iceland',
            'India',
            'Indonesia',
            'Iran',
            'Iraq',
            'Ireland',
            'Isle of Man',
            'Israel',
            'Italy',
            'Jamaica',
            'Japan',
            'Jersey',
            'Jordan',
            'Kazakhstan',
            'Kenya',
            'Kiribati',
            'Korea, Dem. Rep.',
            'Korea, Rep.',
            'Korea, United',
            'Kosovo',
            'Kuwait',
            'Kyrgyzstan',
            'Laos',
            'Latvia',
            'Lebanon',
            'Lesotho',
            'Liberia',
            'Libya',
            'Liechtenstein',
            'Lithuania',
            'Luxembourg',
            'Macao, China',
            'Macedonia, FYR',
            'Madagascar',
            'Malawi',
            'Malaysia',
            'Maldives',
            'Mali',
            'Malta',
            'Marshall Islands',
            'Martinique',
            'Mauritania',
            'Mauritius',
            'Mayotte',
            'Mexico',
            'Micronesia, Fed. Sts.',
            'Moldova',
            'Monaco',
            'Mongolia',
            'Montenegro',
            'Montserrat',
            'Morocco',
            'Mozambique',
            'Myanmar',
            'Namibia',
            'Nauru',
            'Nepal',
            'Netherlands',
            'Netherlands Antilles',
            'New Caledonia',
            'New Zealand',
            'Ngorno-Karabakh',
            'Nicaragua',
            'Niger',
            'Nigeria',
            'Niue',
            'Norfolk Island',
            'Northern Cyprus',
            'Northern Mariana Islands',
            'Norway',
            'Oman',
            'Pakistan',
            'Palau',
            'Panama',
            'Papua New Guinea',
            'Paraguay',
            'Peru',
            'Philippines',
            'Pitcairn',
            'Poland',
            'Portugal',
            'Puerto Rico',
            'Qatar',
            'Reunion',
            'Romania',
            'Russia',
            'Rwanda',
            'Saint Barthelemy',
            'Saint Helena',
            'Saint Kitts and Nevis',
            'Saint Lucia',
            'Saint Martin',
            'Saint Vincent and the Grenadines',
            'Saint-Pierre-et-Miquelon',
            'Samoa',
            'San Marino',
            'Sao Tome and Principe',
            'Saudi Arabia',
            'Senegal',
            'Serbia',
            'Serbia and Montenegro',
            'Serbia excluding Kosovo',
            'Seychelles',
            'Sierra Leone',
            'Singapore',
            'Slovak Republic',
            'Slovenia',
            'Solomon Islands',
            'Somalia',
            'Somaliland',
            'South Africa',
            'South Ossetia',
            'Spain',
            'Sri Lanka',
            'Sudan',
            'Suriname',
            'Svalbard',
            'Swaziland',
            'Sweden',
            'Switzerland',
            'Syria',
            'Taiwan',
            'Tajikistan',
            'Tanzania',
            'Thailand',
            'Timor-Leste',
            'Togo',
            'Tokelau',
            'Tonga',
            'Transnistria',
            'Trinidad and Tobago',
            'Tunisia',
            'Turkey',
            'Turkmenistan',
            'Turks and Caicos Islands',
            'Tuvalu',
            'Uganda',
            'Ukraine',
            'United Arab Emirates',
            'United Kingdom',
            'Uruguay',
            'USSR',
            'Uzbekistan',
            'Wallis et Futuna',
            'Vanuatu',
            'Venezuela',
            'West Bank and Gaza',
            'West Germany',
            'Western Sahara',
            'Vietnam',
            'Virgin Islands (U.S.)',
            'Yemen Arab Republic (Former)',
            'Yemen Democratic (Former)',
            'Yemen, Rep.',
            'Yugoslavia',
            'Zambia',
            'Zimbabwe',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    program_type = schema.Tuple(
        title=_('Program Type'),
        default=(
            'Exchange-United States',
            'Exchange-International',
            'Group-Domestic with Leader',
            'Group-International with Leader',
            'Internship-United States',
            'Internship-International',
            'Study Abroad',
            'Study/Internship',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    program_component = schema.Tuple(
        title=_('Program Component'),
        default=(
            'none',
            'Clinicals',
            'Field Research',
            'Internship',
            'Leadership',
            'Research',
            'Service Learning',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    accommodation = schema.Tuple(
        title=_('Accommodation'),
        default=(
            'Host Family',
            'Hostel',
            'Hotel',
            'International Student House',
            'Private Apartment',
            'Residence Hall',
            'Shared Apartment',
            'Rustic',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    room_size = schema.Tuple(
        title=_('Room Size'),
        default=(
            'Single Rooms',
            'Double Rooms',
            'Triple Rooms',
            'Multi-bed Rooms',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    locations = schema.Tuple(
        title=_('Locations'),
        default=(
            'UW Oshkosh Parking Lot 6; corner of Osceola & Pearl Ave.',
            "Chicago O'Hare International Airport",
            'Milwaukee General Mitchell Airport',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    airport = schema.Tuple(
        title=_('Airports'),
        default=(
            'Milwaukee',
            'Appleton',
            "O'Hare",
        ),
        value_type=schema.TextLine(),
    )

    credits = schema.Tuple(
        title=_('Credits'),
        default=(
            '0',
            '1',
            '1.5',
            '2',
            '3',
            '4',
            '5',
            '6',
            '7',
            '8',
            '9',
            '10',
            '11',
            '12',
            '13',
            '14',
            '15',
            '16',
            '17',
            '18',
            '19',
            '20',
            '21',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    travel_document = schema.Tuple(
        title=_('Travel Document'),
        default=(
            'Passport',
            "Driver's License",
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    provider_type = schema.Tuple(
        title=_('Provider Type'),
        default=(
            'Accommodation',
            'Air',
            'Entrance',
            'Government Agency',
            'High School',
            'Intensive Language School',
            'Other',
            'Religious Organization',
            'Transport',
            'Travel Agency-Educational',
            'Travel Agency-Logistics',
            'University',
            'Volunteer Organization',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    course_subject = schema.Tuple(
        title=_('Course Subject'),
        default=(
            'ACAD',
            'ACCT',
            'ANTHRO',
            'AF AM ST',
            'ARABIC',
            'ART',
            'BIOLOGY ',
            'ARAPAHO',
            'BUSINESS',
            'CHEM',
            'CHINESE',
            'CNSLR ED',
            'COMM ',
            'COMP SCI',
            'CRIM JUS ',
            'DFLL',
            'ECON',
            'ED FOUND',
            'ED LDRSP',
            'ELEM ED',
            'ENG TECH',
            'ENV STDS',
            'FERM',
            'FINANCE',
            'FRENCH',
            'GEOG',
            'GEOLOGY',
            'GERMAN',
            'HEALTH ED',
            'HISTORY',
            'HONORS',
            'HUMAN SV',
            'INFO SYS',
            'INTRDSCP',
            'INTRNT’L ',
            'JAPANESE',
            'JOURNAL',
            'KINESIOL',
            'LIB STDS',
            'MGMT & HR',
            'MARKETING',
            'MATH',
            'MED TECH ',
            'MIL SCI',
            'MPA',
            'MUSIC',
            'NUR-ACC',
            'NURS-CNP',
            'NURSING',
            'PHIL',
            'PHY/AST',
            'PHY ED',
            'PHYS SCI',
            'POL SCI',
            'PRAC ARTS ',
            'PBIS',
            'PSYCH',
            'PUB ADM',
            'RTF',
            'READING ',
            'RELSTDS',
            'RUSSIAN',
            'SOC',
            'SEC ED',
            'SOC JUSTICE',
            'SOC WORK',
            'SPANISH',
            'SPEC ED',
            'SRVC CRS',
            'SCM',
            'SMGT',
            'WBIS',
            'THEATRE',
            'USP',
            'URB/REG ',
            'WM STUD',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    tuition_and_fees = schema.Tuple(
        title=_('Tuition and Fees'),
        default=DEFAULT_TUITION_AND_FEES,
        missing_value=tuple(),
        required=True,
        value_type=schema.TextLine(),
    )

    flyer = schema.Tuple(
        title=_('Flyer'),
        default=(
            'Anthropology',
            'Art',
            'Australia & New Zealand',
            'Biology',
            'Canada',
            'China',
            'College of Education & Human Services',
            'College of Business',
            'Communication',
            'Computer Science',
            'College of Nursing',
            'Criminal Justice',
            'England/Scotland',
            'English',
            'Environmental Studies',
            'French/France',
            'General',
            'General for Admissions',
            'Geography',
            'Geology',
            'German',
            'Hessen (for external use only)',
            'History',
            'History & Political Science',
            'Honors',
            'Intern Abroad',
            'Italy',
            'Japan',
            'Journalism',
            'Liberal Studies',
            'Math',
            'National Student Exchange',
            'Non-UW Oshkosh Programs',
            'Philosophy',
            'Political Science',
            'Psychology',
            'Religious Studies',
            'S. Korea',
            'Scholarships',
            'Social Justice',
            'Social Work',
            'Spanish',
            'Teach',
            'Theatre',
            'USP',
            "Womens' Studies",
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    oie_staff = schema.Tuple(
        title=_('OIE Staff'),
        default=(
            'Application Intake Specialist',
            'Director',
            'English Language Support Coordinator',
            'Front-line Advisor',
            'Hessen Coordinator',
            'Immigration Compliance Coordinator',
            'International Financial Management Specialist',
            'NSE Coordinator',
            'Program Manager',
            'Study Abroad/Away Coordinator',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    payment_forms = schema.Tuple(
        title=_('Payment Forms'),
        default=(
            'Foundation',
            'PTF',
            'TTR',
            'DPR',
            'TER',
            'PIR',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    salary_terms = schema.Tuple(
        title=_('Salary Terms'),
        default=(
            'Overload 1.25%',
            'Overload 10%',
            'Overload 12.5%',
            'Overload 15%',
            'Overload 2.5%',
            'Overload 3.75%',
            'Overload 5%',
            'Overload 7.5%',
            'Overload Lump Sum',
            'Paid directly to Professor by Partner',
            'Part of Load/No Replacement',
            'Part of Load/Replacement',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    salary_form_type = schema.Tuple(
        title=_('Salary Form Type'),
        default=(
            'Payment to Individual Form (PTF) - Direct Payment',
            'Transaction Transfer Request (TTR) - Replacement Costs',
            'Foundation',
            'Not Applicable',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    visa_delivery_options = schema.Tuple(
        title=_('Visa Delivery Options'),
        default=(
            'OIE Mails',
            'OIE hand delivers',
            'Student applies in person',
            'Student Mails',
            'Travel Agency Secures',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    university = schema.Tuple(
        title=_('University'),
        default=(
            'UW-Oshkosh',
            'UW–Baraboo/Sauk County',
            'UW–Barron County',
            'UW-Colleges Online',
            'UW-Eau Claire',
            'UW–Fond du Lac',
            'UW–Fox Valley',
            'UW-Green Bay',
            'UW-La Crosse ',
            'UW-Madison',
            'UW–Manitowoc',
            'UW–Marathon County',
            'UW–Marinette',
            'UW–Marshfield/Wood County',
            'UW-Milwaukee ',
            'UW-Parkside ',
            'UW-Platteville ',
            'UW–Richland',
            'UW-River Falls',
            'UW–Rock County',
            'UW–Sheboygan',
            'UW-Stevens Point ',
            'UW-Stout',
            'UW-Superior',
            'UW–Washington County',
            'UW–Waukesha',
            'UW-Whitewater ',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    term = schema.Tuple(
        title=_('Term'),
        default=(
            '1 Fall Interim',
            '2 Spring Semester',
            '3 Spring Break',
            '4 Spring Interim',
            '5 Summer',
            '6 Fall Semester',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    sponsoring_unit_or_department = schema.Tuple(
        title=_('Sponsoring Unit or Department'),
        default=(
            'African American Studies',
            'Anthropology',
            'Applied Studies',
            'Art',
            'Biology',
            'Business, College of',
            'Canada & U.S. Studies',
            'Chemistry',
            'Communication Studies',
            'Computer Science',
            'Criminal Justice',
            'Economics',
            'Educational Leadership and Policy',
            'English',
            'Environmental Studies',
            'Foreign Languages and Literature',
            'Geography & Urban Planning',
            'Geology',
            'History',
            'Honors College',
            'Human Kinetics and Health Education  ',
            'Human Services Leadership',
            'Individually Planned Major',
            'Interactive Web Management',
            'Interdisciplinary Studies',
            'International Studies',
            'Journalism',
            'Kinesiology',
            'Letters and Science, College of',
            'Liberal Studies',
            'Literacy and Language',
            'Mathematics',
            'Mathematics Education',
            'Medical Technology',
            'Military Science',
            'Music',
            'Nursing, College of',
            'On-line & Continuing Education, Division of',
            'Philosophy',
            'Physics and Astronomy',
            'Political Science',
            'Pre-Professional Education',
            'Professional Counseling ',
            'Psychology',
            'Public Administration',
            'Quest I',
            'Quest II',
            'Quest III',
            'Radio-TV-Film',
            'Religious Studies',
            'Social Justice',
            'Social Work',
            'Sociology',
            'Special and Early Childhood Education',
            'Teaching and Learning',
            'Theatre',
            'University Studies Program',
            'Urban Planning',
            "Women's and Gender Studies",
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    college_or_unit = schema.Tuple(
        title=_('College or Unit'),
        default=(
            'B College of Business',
            'L College of Letters & Science',
            'N College of Nursing',
            'E College of Education & Human Services',
            'H Honors College',
            'C On-line & Continuing Education, Division of',
            'QI Quest I',
            'QII Quest II',
            'QIII Quest III',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    language = schema.Tuple(
        title=_('Language'),
        default=(
            'American Sign Language',
            'Arabic',
            'Chinese',
            'English',
            'French',
            'German',
            'Italian',
            'Japanese',
            'Korean',
            'Russian',
            'Spanish',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    cooperating_partners = schema.Tuple(
        title=_('Cooperating Partners'),
        default=(
            'Academic Programs International (API)',
            'Accent International',
            'American Institute for Foreign Study (AIFS)',
            'AMIDEAST',
            'Amizade Ltd.',
            'Anglo Educational Services',
            'Anytour International',
            'Beyond Borders International / Minds Abroad',
            'Cultural Experiences Abroad (CEA)',
            'Customized Educational Programs Abroad (CEPA)',
            'China Sense',
            'Council on International Educational Exchange (CIEE)',
            'CISabroad',
            'Destination Partners',
            'Educators Abroad Ltd',
            'EF College Study Tours',
            'EIL Intercultural Learning',
            'Fellowship Travel',
            'Global Academic Ventures',
            'Global Engagement Institute',
            'Happy Tours - Peru',
            'Inspiration India',
            'International Studies Abroad (ISA)',
            'International Study Programs (ISP)',
            'International Volunteer HQ (IVHQ)',
            'Operation Groundswell',
            'Palace Travel',
            'Rama Tours',
            'Select Travel Study',
            'Seminars International',
            'Spanish Learning',
            'Vesna Tours',
            'VIDA Volunteer',
            'World Endeavors',
            'Worldstrides Capstone',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    course_subject_and_number = schema.Tuple(
        title=_('Course Subject & Number'),
        default=(
            'ANTHRO 362',
            'ANTHRO 394',
            'ART 306',
            'ART 308',
            'BIO 300',
            'BIO 360',
            'BIO 796',
            'BUS 341',
            'BUS 351',
            'BUS 365',
            'BUS 389',
            'BUS 411',
            'BUS 462',
            'BUS 486',
            'BUS 492',
            'BUS 494',
            'BUS 694',
            'BUS 740',
            'BUS 758',
            'BUS 792',
            'BUS 796',
            'CHEM 246',
            'CHEM 360',
            'COMM 213',
            'COMM 318',
            'COMM 400',
            'COMM 405',
            'CRIMINAL JUSTICE 375',
            'DFLL 230',
            'ECON 319',
            'ECON 320',
            'ECON 380',
            'ECON 386',
            'ECON 399',
            'ECON 409',
            'ECON 426',
            'ECON 427',
            'ED LDRSP 719',
            'ED LDRSP 796',
            'Elem Ed 202',
            'ELEM ED 349',
            'ELEM ED 377',
            'ELEM ED 400',
            'ELEM ED 401',
            'ELEM ED 404',
            'ELEM ED 405',
            'ELEM ED 406',
            'ELEM ED 424',
            'ELEM ED 453',
            'ELEM ED 454',
            'ELEM ED 455',
            'ELEM ED 496',
            'ELEM ED 577',
            'ENGLISH 204',
            'ENGLISH 205',
            'ENGLISH 211',
            'ENGLISH 212',
            'ENGLISH 220',
            'ENGLISH 224',
            'ENGLISH 225',
            'ENGLISH 226',
            'ENGLISH 247',
            'ENGLISH 294',
            'ENGLISH 302',
            'ENGLISH 305',
            'ENGLISH 306',
            'ENGLISH 316',
            'ENGLISH 318',
            'ENGLISH 332',
            'ENGLISH 347',
            'ENGLISH 350',
            'ENGLISH 353',
            'ENGLISH 356',
            'ENGLISH 357',
            'ENGLISH 370',
            'ENGLISH 396',
            'ENGLISH 405',
            'ENGLISH 505',
            'ENGLISH 506',
            'ENGLISH 547',
            'ENGLISH 550',
            'ENGLISH 553',
            'ENGLISH 556',
            'ENGLISH 557',
            'ENGLISH 570',
            'ENGLISH 596',
            'ENGLISH 605',
            'ENGLISH 709',
            'ENVT STDS 300',
            'ENVT STDS 390',
            'ENVT STDS 395',
            'EXT STDS 082',
            'EXT STDS 083',
            'FRENCH 110',
            'FRENCH 111',
            'FRENCH 203',
            'FRENCH 204',
            'FRENCH 301',
            'FRENCH 304',
            'FRENCH 331',
            'FRENCH 360',
            'GEOG 331',
            'GEOG 399',
            'GEOG 402',
            'GEOG 444',
            'GEOLOGY 360',
            'GEOLOGY 444',
            'GEOLOGY 560',
            'HISTORY 303',
            'HISTORY 312',
            'HISTORY 316',
            'HISTORY 333',
            'HISTORY 336',
            'HISTORY 350',
            'HISTORY 446',
            'HONORS 275',
            'HUMAN SV 235',
            'HUMAN SV 325',
            'HUMAN SV 375',
            'HUMAN SV 411',
            'HUMAN SV 420',
            'HUMAN SV 421',
            'INTRDSCP 350',
            'INTRDSCP 351',
            'INTRDSCP 399',
            'INTRDSCP 442',
            'INTRNTL 250',
            'INTRNTL 333',
            'JAPANESE 001',
            'JAPANESE 110',
            'JAPANESE 111',
            'JAPANESE 211',
            'JAPANESE 305',
            'JAPANESE 311',
            'JAPANESE 360',
            'JOURNAL 239',
            'JOURNAL 343',
            'JOURNAL 454',
            'KINESIOLOGY 446',
            'LIB STDS 200',
            'LIB STDS 202',
            'LIB STDS 301',
            'LIB STDS 307',
            'LIB STDS 311',
            'LIB STDS 331',
            'LIB STDS 336',
            'MATH 430',
            'MATH 490',
            'MATH 746',
            'MHR 375',
            'MUSIC 218',
            'NO COURSE ENROLLMENT',
            'NURSING 315',
            'NURSING 317',
            'NURSING 415',
            'NURSING 418',
            'NURSING 438',
            'NURSING 496',
            'NURSING 736',
            'NURSING 738',
            'PHILOSOPHY 105',
            'PHILOSOPHY 109',
            'PHILOSOPHY 426',
            'PHILOSOPHY 446',
            'PHY ED 208',
            'POLSCI 101',
            'POLSCI 212',
            'POLSCI 301',
            'POLSCI 303',
            'POLSCI 312',
            'POLSCI 372',
            'POLSCI 373',
            'POLSCI 374',
            'PROF COUNS 202',
            'PROF COUNS 724',
            'PSYCHOLOGY 225',
            'PSYCHOLOGY 275',
            'PSYCHOLOGY 446',
            'PSYCHOLOGY 480',
            'RELIGIOUS STUDIES 395',
            'RELIGIOUS STUDIES 399',
            'RTF 399',
            'SEC ED 202',
            'SEC ED 349',
            'SEC ED 377',
            'SEC ED 400',
            'SEC ED 401',
            'SEC ED 404',
            'SEC ED 405',
            'SEC ED 450',
            'SEC ED 451',
            'SEC ED 455',
            'SEC ED 460',
            'SEC ED 461',
            'SEC ED 465',
            'SEC ED 549',
            'SEC ED 577',
            'SOCIAL JUSTICE 399',
            'SOCIAL WORK 333',
            'SOCIAL WORK 410',
            'SPANISH 110',
            'SPANISH 111',
            'SPANISH 203',
            'SPANISH 204',
            'SPANISH 207',
            'SPANISH 208',
            'SPANISH 300',
            'SPANISH 301',
            'SPANISH 304',
            'SPANISH 308',
            'SPANISH 309',
            'SPANISH 310',
            'SPANISH 311',
            'SPANISH 312',
            'SPANISH 313',
            'SPANISH 314',
            'SPANISH 318',
            'SPANISH 320',
            'SPANISH 325',
            'SPANISH 332',
            'SPANISH 351',
            'SPANISH 361',
            'SPANISH 362',
            'SPANISH 363',
            'SPANISH 364',
            'SPANISH 365',
            'SPANISH 474',
            'SPEC ED 308',
            'SPEC ED 456',
            'SRVC CRS 421',
            'SRVC CRS 422',
            'SRVC CRS 621',
            'SRVC CRS 622',
            'THEATRE 202',
            'THEATRE 404',
            'THEATRE 463',
            'THEATRE 663',
            'TNHSL 521',
            'TNHSL 522',
            "WOMEN'S STUDIES 224",
            "WOMEN'S STUDIES 303",
            "WOMEN'S STUDIES 332",
            "WOMEN'S STUDIES 366",
            "WOMEN'S STUDIES 399",
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    requirements_met = schema.Tuple(
        title=_('Requirements Met'),
        default=(
            'CS',
            'Culture (XC)',
            'Ethnic Studies (ES)',
            'Global C itizenship (GC)',
            'Global Scholar (GS)',
            'Honors',
            'Humanities (HU)',
            'Math (MA)',
            'Math (XM)',
            'Natural Science (NS)',
            'Nature (XN)',
            'Quest I',
            'Quest II',
            'Quest III',
            'Quest Speaking',
            'Quest Writing',
            'Social Science (SS)',
            'Society (XS)',
            'XK',
            'XL',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    course_enrollment_at = schema.Tuple(
        title=_('Course Enrollment at'),
        default=(
            'UW Oshkosh Only',
            'UW Oshkosh & Host (concurrent enrollment)',
            'Host Only',
            'No Course Enrollment',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    program_cycle = schema.Tuple(
        title=_('Program Cycle'),
        default=(
            'once',
            'annually',
            'every 2 years',
            'every 3 years',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    building = schema.Tuple(
        title=_('Building'),
        default=(
            'Albee Hall',
            'Alumni Welcome & Conference Center',
            'Arts and Communications Building',
            'Blackhawk Commons',
            'Center for Equity & Diversity',
            'Clow',
            'Dempsey',
            'ERIC',
            'Fredric March Theatre',
            'Gruenhagen Conference Center',
            'Halsey Science Center',
            'Harrington Hall',
            'Kolf',
            'Multicultural Education Center',
            'Nursing / Education Building',
            'Oviatt House',
            'Polk Library',
            'Pollock Alumni House',
            'Radford Hall',
            'Reeve Memorial Union',
            'Sage Hall',
            'Student Recreation and Wellness Center',
            'Student Success Center',
            'Swart Hall',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    transition_type = schema.Tuple(
        title=_('Transition Type'),
        default=(
            'Arrival in first host city',
            'Day trip',
            'Intercity transfer',
            'Arrival home',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    leadership_role = schema.Tuple(
        title=_('Leadership Role'),
        default=(
            'On-site Program Leader',
            'On-site Program Co-leader',
            'Individual external to the UW providing leadership support',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    title = schema.Tuple(
        title=_('Title'),
        default=(
            'Dr.',
            'Professor',
            'None',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    approving_as = schema.Tuple(
        title=_('Approving as'),
        default=(
            'Chair',
            'Dean',
            'Committee Chair',
            'USP Reviewer',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    class_standing = schema.Tuple(
        title=_('Class Standing'),
        default=(
            '0+ credits',
            '30+ credits',
            '60+ credits',
            '90+ credits',
            'post-graduate',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    compensation_type = schema.Tuple(
        title=_('Compensation Type'),
        default=(
            'Part of load',
            'Overload',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    compensation_payment_or_replacement = schema.Tuple(
        title=_('Compensation Payment or Replacement'),
        default=(
            'No replacement costs due to the College',
            'Replacement costs due to the College',
            'Paid by the College',
            'Paid by external partner',
            'Paid by study away students',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    percentage_or_lump_sum = schema.Tuple(
        title=_('Compensation Percentage or Lump Sum'),
        default=(
            '2.5% per credit (faculty rate)',
            '3.33% per credit (academic staff rate)',
            'Lump sum',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    equipment_and_space = schema.Tuple(
        title=_('Equipment & Space'),
        default=(
            'I do not need teaching space or equipment.',
            'I have the following space/equipment needs: (if checked, please describe).',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    guest_lectures = schema.Tuple(
        title=_('Guest Lectures'),
        default=(
            'I do not need guest lecturers.',
            'I do need guest lecturers and will include details '
            'within the daily itinerary in this application.',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    immigration_status = schema.Tuple(
        title=_('Immigration Status'),
        default=(
            'N/A (US Citizen)'
            'Green Card Holder (US Permanent Resident)',
            'A',
            'A-2',
            'B-1',
            'B-2',
            'BCC',
            'C',
            'C5',
            'CR1',
            'CR2',
            'CW-1',
            'D',
            'DV',
            'E',
            'E-3',
            'E1',
            'E2',
            'E3',
            'EW3',
            'F',
            'F1',
            'F2A',
            'F2B',
            'F3',
            'F4',
            'G1-G5, NATO',
            'H-1B',
            'H-1B1 - Chile',
            'H-1B1 - Singapore',
            'H-2A',
            'H-2B',
            'H-3',
            'I',
            'I5',
            'IH3',
            'IH4',
            'IR1',
            'IR2',
            'IR3',
            'IR4',
            'IR5',
            'J',
            'K-1',
            'K-3',
            'L',
            'M',
            'NATO1-6',
            'O',
            'P',
            'Q',
            'R',
            'R5',
            'S (many)',
            'SB',
            'SD',
            'SI',
            'SQ',
            'SR',
            'T',
            'T5',
            'TN/TD',
            'U',
            'V',
        ),
        missing_value=(),
        required=False,
        value_type=schema.TextLine(),
    )

    eligibility_requirement = schema.Tuple(
        title=_('Eligibility Requirement'),
        default=DEFAULT_ELIGIBILITY_REQUIREMENTS,
        missing_value=(),
        required=False,
        value_type=schema.TextLine(),
    )

    education_level = schema.Tuple(
        title=_('Education Levels'),
        default=(
            'High School Junior',
            'High School Senior',
            'University Freshman',
            'University Sophomore',
            'University Junior',
            'University Senior',
            'Graduate School',
            'I am not a student',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    student_status = schema.Tuple(
        title=_('Student Status'),
        default=(
            '1) UWO students making progress toward a degree may apply.',
            '2) UW System students making progress toward a degree may apply.',
            '3) Students making progress toward a degree at an institution of higher education '
            'may apply. (This includes exchange students and visiting students from abroad currently '
            'studying at UW Oshkosh.)',
            '4) Students making progress toward a degree at an institution of higher education and community '
            'members may apply. Community members require approval by the Program Liaison.',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    program_of_study = schema.Tuple(
        title=_('Program of Study'),
        default=(
            'Honors College',
            'College of Business',
            'College of Nursing',
            'MBA - Executive Path',
            'MBA - Professional Path',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    enrollment_institution = schema.Tuple(
        title=_('Course Enrollment Institutions'),
        default=(
            'UW Oshkosh only',
            'Foreign Cooperating Partner only',
            'Simultaneous enrollment at UW Oshkosh and Foreign Cooperating Partner',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )

    widget(
        state_of_wisconsin_need_based_travel_grant_form=NamedFileFieldWidget,
    )
    state_of_wisconsin_need_based_travel_grant_form = schema.Bytes(
        title='State of Wisconsin Need-based Travel Grant Form',
        description='select the PDF for this form',
        required=False,
        missing_value=None,
        default=None,
    )
    widget(
        special_student_form_for_undergraduate_admissions=NamedFileFieldWidget,
    )
    special_student_form_for_undergraduate_admissions = schema.Bytes(
        title='Special Student Form for Undergraduate Admissions',
        description='select the PDF for this form',
        required=False,
        missing_value=None,
        default=None,
    )
    widget(
        disciplinary_clearance_form=NamedFileFieldWidget,
    )
    disciplinary_clearance_form = schema.Bytes(
        title='Disciplinary Clearance Form',
        description='select the PDF for this form',
        required=False,
        missing_value=None,
        default=None,
    )
    widget(
        uwo_logo=NamedImageFieldWidget,
    )
    uwo_logo = schema.Bytes(
        title=_('UWO Logo'),
        description=_('will appear on program description view'),
        required=False,
        missing_value=None,
        default=None,
    )
    widget('program_view_footer', klass='pat-tinymce')
    program_view_footer = schema.Text(
        title=_('Program Footer Text'),
        description=_('will appear at bottom of public program view'),
        required=False,
        missing_value=None,
        default=None,
    )
    airport_transfer = schema.Tuple(
        title=_('Airport Transfer Modes'),
        default=(
            'No US airport transfer provided',
            'School Bus',
            'Coach Bus',
        ),
        missing_value=(),
        required=True,
        value_type=schema.TextLine(),
    )


class OIEStudyAbroadStudentControlPanelForm(RegistryEditForm):
    schema = IOIEStudyAbroadStudentControlPanel
    schema_prefix = 'oiestudyabroadstudent'
    label = 'OIE Study Abroad Settings'

    # def updateFields(self):
        # super(OIEStudyAbroadStudentControlPanelForm, self).updateFields()
        # import pdb; pdb.set_trace()
        # oie_group = [group for group in self.groups if group.label == 'OIE'][0]
        # forms_group = [group for group in self.groups if group.label == 'Forms'][0]
        # oie_group.fields['uwo_logo'].widgetFactory = NamedImageFieldWidget
        # forms_group.fields['state_of_wisconsin_need_based_travel_grant_form'].widgetFactory = NamedImageFieldWidget
        # forms_group.fields['special_student_form_for_undergraduate_admissions'].widgetFactory = NamedImageFieldWidget
        # forms_group.fields['disciplinary_clearance_form'].widgetFactory = NamedImageFieldWidget

OIEStudyAbroadStudentControlPanelView = layout.wrap_form(
    OIEStudyAbroadStudentControlPanelForm, ControlPanelFormWrapper)
